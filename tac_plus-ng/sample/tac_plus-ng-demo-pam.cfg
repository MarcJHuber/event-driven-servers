#!/usr/bin/env -S /usr/local/bin/tactrace.pl --key=demo-key --conf
#
# Sample config file for tac_plus-ng with pammavis or pammavis-mt backend.
#
# Part of the PAM details in these comments could be specific to Ubuntu and may differ for other systems.
#
# Please note that this sample configuration uses the sshd PAM service for authentication. You can use a
# different one if the sshd doesn't exist on your system, see /etc/pam.d/ for available pre-existing services.
#
# For production, it's preferable to use a custom (and stripped down) PAM service "mavis"
# which can easily be created by running
#   printf "@include common-auth\n@include common-account\n@include common-password\n" > /etc/pam.d/mavis
#   chmod 644 /etc/pam.d/mavis
# as root. The "-s sshd" arguments then need to be removed (or replaced with "-s mavis", which is
# the default).
#
# Also, the PAM implementation on your system may require root privileges. Unless you're running
# tac_plus-ng (or tactrace.pl) as root you might need to wrap the pammavis* binaries in sudo (with
# a suitable configuration) or set the setuid bit (as root), e.g.:
#   chown root /usr/local/sbin/pammavis*
#   chmod u+s /usr/local/sbin/pammavis*
#

id = spawnd {
	background = no
	single process = yes   # not suitable for production
	listen { port = 4949 } # standard port would be 49
}

id = tac_plus-ng {
#	Single--threaded backend,:
	mavis module demo = external { exec = /usr/local/sbin/pammavis pammavis -s sshd }
#	mavis module demo = external { exec = /usr/bin/sudo sudo /usr/local/sbin/pammavis -s sshd }
#	Multi-threaded backend:
#	mavis module demo-mt  = external-mt { exec = /usr/local/sbin/pammavis-mt pammavis-mt -s sshd }
#	mavis module demo-mt = external-mt { exec = /usr/bin/sudo sudo /usr/local/sbin/pammavis-mt -s sshd }
#
	user backend = mavis	# retrieve user data from backend
	login backend = mavis	# use backend for user login authentication
	pap password = login	# map pap password to login password

#	Device, profile and ruleset definitions:
	device world { address = 0.0.0.0/0 key = demo-key }
	profile demo-profile { script { if (service == shell) { if (cmd == "") set priv-lvl = 15 permit } } }
	ruleset { rule demo-rule { script { profile = demo-profile permit } } }
}
