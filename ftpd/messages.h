
/* AUTOMATICALLY GENERATED -- DO NOT EDIT */

extern char *lang[];

extern char *message[][2];

#define IDX_530_Not_logged_in 0
#define MSG_530_Not_logged_in (message[0][ctx->lang])
#define IDX_501_Syntax_error_arg_req 1
#define MSG_501_Syntax_error_arg_req (message[1][ctx->lang])
#define IDX_502_Command_not_implemented 2
#define MSG_502_Command_not_implemented (message[2][ctx->lang])
#define IDX_500_Syntax_cmd_unrec 3
#define MSG_500_Syntax_cmd_unrec (message[3][ctx->lang])
#define IDX_530_Login_incorrect 4
#define MSG_530_Login_incorrect (message[4][ctx->lang])
#define IDX_550_Permission_denied 5
#define MSG_550_Permission_denied (message[5][ctx->lang])
#define IDX_250_File_renamed 6
#define MSG_250_File_renamed (message[6][ctx->lang])
#define IDX_503_Use_RNFR_first 7
#define MSG_503_Use_RNFR_first (message[7][ctx->lang])
#define IDX_550_No_such_file_or_directory 8
#define MSG_550_No_such_file_or_directory (message[8][ctx->lang])
#define IDX_250_Directory_created 9
#define MSG_250_Directory_created (message[9][ctx->lang])
#define IDX_250_Directory_removed 10
#define MSG_250_Directory_removed (message[10][ctx->lang])
#define IDX_250_File_removed 11
#define MSG_250_File_removed (message[11][ctx->lang])
#define IDX_550_Command_unsupported 12
#define MSG_550_Command_unsupported (message[12][ctx->lang])
#define IDX_200_User_listing_follows 13
#define MSG_200_User_listing_follows (message[13][ctx->lang])
#define IDX_200_End_of_listing 14
#define MSG_200_End_of_listing (message[14][ctx->lang])
#define IDX_200_User_added 15
#define MSG_200_User_added (message[15][ctx->lang])
#define IDX_200_User_removed 16
#define MSG_200_User_removed (message[16][ctx->lang])
#define IDX_200_User_changed 17
#define MSG_200_User_changed (message[17][ctx->lang])
#define IDX_421_Too_many_users 18
#define MSG_421_Too_many_users (message[18][ctx->lang])
#define IDX_550_No_access_to_rootdir 19
#define MSG_550_No_access_to_rootdir (message[19][ctx->lang])
#define IDX_550_No_access_to_homedir 20
#define MSG_550_No_access_to_homedir (message[20][ctx->lang])
#define IDX_550_No_response_from_auth 21
#define MSG_550_No_response_from_auth (message[21][ctx->lang])
#define IDX_230_Anonymous_logged_in 22
#define MSG_230_Anonymous_logged_in (message[22][ctx->lang])
#define IDX_230_User_logged_in 23
#define MSG_230_User_logged_in (message[23][ctx->lang])
#define IDX_226_Transfer_complete 24
#define MSG_226_Transfer_complete (message[24][ctx->lang])
#define IDX_226_Transfer_completeZ 25
#define MSG_226_Transfer_completeZ (message[25][ctx->lang])
#define IDX_451_Transfer_incomplete_quota 26
#define MSG_451_Transfer_incomplete_quota (message[26][ctx->lang])
#define IDX_451_Transfer_incomplete 27
#define MSG_451_Transfer_incomplete (message[27][ctx->lang])
#define IDX_426_Transfer_aborted 28
#define MSG_426_Transfer_aborted (message[28][ctx->lang])
#define IDX_225_ABOR_successful 29
#define MSG_225_ABOR_successful (message[29][ctx->lang])
#define IDX_226_ABOR_successful 30
#define MSG_226_ABOR_successful (message[30][ctx->lang])
#define IDX_500_AUTH_not_supported 31
#define MSG_500_AUTH_not_supported (message[31][ctx->lang])
#define IDX_504_AUTH_type_not_supported 32
#define MSG_504_AUTH_type_not_supported (message[32][ctx->lang])
#define IDX_501_AUTH_SSL_already_active 33
#define MSG_501_AUTH_SSL_already_active (message[33][ctx->lang])
#define IDX_234_AUTH_SSL_OK 34
#define MSG_234_AUTH_SSL_OK (message[34][ctx->lang])
#define IDX_501_No_such_dir 35
#define MSG_501_No_such_dir (message[35][ctx->lang])
#define IDX_250_Dir_changed 36
#define MSG_250_Dir_changed (message[36][ctx->lang])
#define IDX_211_Extensions 37
#define MSG_211_Extensions (message[37][ctx->lang])
#define IDX_211_End 38
#define MSG_211_End (message[38][ctx->lang])
#define IDX_200_Done 39
#define MSG_200_Done (message[39][ctx->lang])
#define IDX_501_Unknown_fact 40
#define MSG_501_Unknown_fact (message[40][ctx->lang])
#define IDX_501_Unknown_transfer_mode 41
#define MSG_501_Unknown_transfer_mode (message[41][ctx->lang])
#define IDX_501_No_options 42
#define MSG_501_No_options (message[42][ctx->lang])
#define IDX_214_Command_not_implemented 43
#define MSG_214_Command_not_implemented (message[43][ctx->lang])
#define IDX_214_Syntax 44
#define MSG_214_Syntax (message[44][ctx->lang])
#define IDX_502_Unknown_command 45
#define MSG_502_Unknown_command (message[45][ctx->lang])
#define IDX_214_supported_SITE_commands 46
#define MSG_214_supported_SITE_commands (message[46][ctx->lang])
#define IDX_214_try_SITE_HELP 47
#define MSG_214_try_SITE_HELP (message[47][ctx->lang])
#define IDX_503_Already_logged_in 48
#define MSG_503_Already_logged_in (message[48][ctx->lang])
#define IDX_220_Virtual_host_set 49
#define MSG_220_Virtual_host_set (message[49][ctx->lang])
#define IDX_200_Language_set 50
#define MSG_200_Language_set (message[50][ctx->lang])
#define IDX_501_Language_not_supported 51
#define MSG_501_Language_not_supported (message[51][ctx->lang])
#define IDX_501_Transfer_in_progress 52
#define MSG_501_Transfer_in_progress (message[52][ctx->lang])
#define IDX_550_Not_plain_file 53
#define MSG_550_Not_plain_file (message[53][ctx->lang])
#define IDX_200_Command_okay 54
#define MSG_200_Command_okay (message[54][ctx->lang])
#define IDX_503_USER_before_PASS 55
#define MSG_503_USER_before_PASS (message[55][ctx->lang])
#define IDX_500_EPSV_only 56
#define MSG_500_EPSV_only (message[56][ctx->lang])
#define IDX_500_PASV_is_V4 57
#define MSG_500_PASV_is_V4 (message[57][ctx->lang])
#define IDX_200_EPSV_only 58
#define MSG_200_EPSV_only (message[58][ctx->lang])
#define IDX_522_Network_proto_unsupported 59
#define MSG_522_Network_proto_unsupported (message[59][ctx->lang])
#define IDX_200_Using_network_proto 60
#define MSG_200_Using_network_proto (message[60][ctx->lang])
#define IDX_501_Protocol_mismatch 61
#define MSG_501_Protocol_mismatch (message[61][ctx->lang])
#define IDX_227_Entering_PASV 62
#define MSG_227_Entering_PASV (message[62][ctx->lang])
#define IDX_228_Entering_LPSV 63
#define MSG_228_Entering_LPSV (message[63][ctx->lang])
#define IDX_229_Entering_EPSV 64
#define MSG_229_Entering_EPSV (message[64][ctx->lang])
#define IDX_501_Data_connection_active 65
#define MSG_501_Data_connection_active (message[65][ctx->lang])
#define IDX_501_PORT_is_V4 66
#define MSG_501_PORT_is_V4 (message[66][ctx->lang])
#define IDX_504_Command_not_implemented 67
#define MSG_504_Command_not_implemented (message[67][ctx->lang])
#define IDX_521_Supported_AF 68
#define MSG_521_Supported_AF (message[68][ctx->lang])
#define IDX_522_Supported_AF 69
#define MSG_522_Supported_AF (message[69][ctx->lang])
#define IDX_501_Syntax_error 70
#define MSG_501_Syntax_error (message[70][ctx->lang])
#define IDX_501_port_denied 71
#define MSG_501_port_denied (message[71][ctx->lang])
#define IDX_200_port_successful 72
#define MSG_200_port_successful (message[72][ctx->lang])
#define IDX_257_current_dir 73
#define MSG_257_current_dir (message[73][ctx->lang])
#define IDX_221_Control 74
#define MSG_221_Control (message[74][ctx->lang])
#define IDX_221_Goodbye 75
#define MSG_221_Goodbye (message[75][ctx->lang])
#define IDX_350_Restarting_rang 76
#define MSG_350_Restarting_rang (message[76][ctx->lang])
#define IDX_350_Restarting 77
#define MSG_350_Restarting (message[77][ctx->lang])
#define IDX_350_Reset_rang 78
#define MSG_350_Reset_rang (message[78][ctx->lang])
#define IDX_431_Opening_datacon_failed 79
#define MSG_431_Opening_datacon_failed (message[79][ctx->lang])
#define IDX_150_Opening_dc_bytes 80
#define MSG_150_Opening_dc_bytes (message[80][ctx->lang])
#define IDX_150_Opening_dc 81
#define MSG_150_Opening_dc (message[81][ctx->lang])
#define IDX_550_No_such_file 82
#define MSG_550_No_such_file (message[82][ctx->lang])
#define IDX_350_Awaiting_dest 83
#define MSG_350_Awaiting_dest (message[83][ctx->lang])
#define IDX_500_arguments_required 84
#define MSG_500_arguments_required (message[84][ctx->lang])
#define IDX_500_invalid_mode 85
#define MSG_500_invalid_mode (message[85][ctx->lang])
#define IDX_500_missing_filename 86
#define MSG_500_missing_filename (message[86][ctx->lang])
#define IDX_200_permissions_changed 87
#define MSG_200_permissions_changed (message[87][ctx->lang])
#define IDX_200_list_mode 88
#define MSG_200_list_mode (message[88][ctx->lang])
#define IDX_200_Group_id_changed 89
#define MSG_200_Group_id_changed (message[89][ctx->lang])
#define IDX_550_Group_id_deny 90
#define MSG_550_Group_id_deny (message[90][ctx->lang])
#define IDX_200_umask 91
#define MSG_200_umask (message[91][ctx->lang])
#define IDX_212_status_of 92
#define MSG_212_status_of (message[92][ctx->lang])
#define IDX_212_status_end 93
#define MSG_212_status_end (message[93][ctx->lang])
#define IDX_213_status_of 94
#define MSG_213_status_of (message[94][ctx->lang])
#define IDX_213_status_end 95
#define MSG_213_status_end (message[95][ctx->lang])
#define IDX_451_quota_exceeded 96
#define MSG_451_quota_exceeded (message[96][ctx->lang])
#define IDX_451_unique_file_failure 97
#define MSG_451_unique_file_failure (message[97][ctx->lang])
#define IDX_200_transfer_type 98
#define MSG_200_transfer_type (message[98][ctx->lang])
#define IDX_200_transfer_mode 99
#define MSG_200_transfer_mode (message[99][ctx->lang])
#define IDX_501_mode_z_error 100
#define MSG_501_mode_z_error (message[100][ctx->lang])
#define IDX_331_anon 101
#define MSG_331_anon (message[101][ctx->lang])
#define IDX_331_user 102
#define MSG_331_user (message[102][ctx->lang])
#define IDX_250_listing_start 103
#define MSG_250_listing_start (message[103][ctx->lang])
#define IDX_250_listing_end 104
#define MSG_250_listing_end (message[104][ctx->lang])
#define IDX_452_Command_not_for_ascii 105
#define MSG_452_Command_not_for_ascii (message[105][ctx->lang])
#define IDX_452_Command_not_during_transfers 106
#define MSG_452_Command_not_during_transfers (message[106][ctx->lang])
#define IDX_501_No_such_file_or_directory 107
#define MSG_501_No_such_file_or_directory (message[107][ctx->lang])
#define IDX_421_Service_not_available 108
#define MSG_421_Service_not_available (message[108][ctx->lang])
#define IDX_451_Internal_error 109
#define MSG_451_Internal_error (message[109][ctx->lang])
#define IDX_211_Server_status 110
#define MSG_211_Server_status (message[110][ctx->lang])
#define IDX_211_Server_status_END 111
#define MSG_211_Server_status_END (message[111][ctx->lang])
#define IDX_protected_cipher 112
#define MSG_protected_cipher (message[112][ctx->lang])
#define IDX_protected 113
#define MSG_protected (message[113][ctx->lang])
#define IDX_unprotected 114
#define MSG_unprotected (message[114][ctx->lang])
#define IDX_handshake 115
#define MSG_handshake (message[115][ctx->lang])
#define IDX_Protection_control 116
#define MSG_Protection_control (message[116][ctx->lang])
#define IDX_Protection_data 117
#define MSG_Protection_data (message[117][ctx->lang])
#define IDX_Transport_protocol 118
#define MSG_Transport_protocol (message[118][ctx->lang])
#define IDX_Transfer_type 119
#define MSG_Transfer_type (message[119][ctx->lang])
#define IDX_Transfer_mode 120
#define MSG_Transfer_mode (message[120][ctx->lang])
#define IDX_Idle_timeout 121
#define MSG_Idle_timeout (message[121][ctx->lang])
#define IDX_Data_transfer 122
#define MSG_Data_transfer (message[122][ctx->lang])
#define IDX_Data_transfer_ascii 123
#define MSG_Data_transfer_ascii (message[123][ctx->lang])
#define IDX_Data_idle 124
#define MSG_Data_idle (message[124][ctx->lang])
#define IDX_Data_total 125
#define MSG_Data_total (message[125][ctx->lang])
#define IDX_200_Checkmethod 126
#define MSG_200_Checkmethod (message[126][ctx->lang])
#define IDX_504_Unknown_checkmethod 127
#define MSG_504_Unknown_checkmethod (message[127][ctx->lang])
#define IDX_200_Checkmethod_set 128
#define MSG_200_Checkmethod_set (message[128][ctx->lang])
#define IDX_Supported_commands 129
#define MSG_Supported_commands (message[129][ctx->lang])
#define IDX_214_Thats_all 130
#define MSG_214_Thats_all (message[130][ctx->lang])
#define IDX_ABOR 131
#define MSG_ABOR (message[131][ctx->lang])
#define IDX_APPE 132
#define MSG_APPE (message[132][ctx->lang])
#define IDX_AUTH 133
#define MSG_AUTH (message[133][ctx->lang])
#define IDX_CWD 134
#define MSG_CWD (message[134][ctx->lang])
#define IDX_CDUP 135
#define MSG_CDUP (message[135][ctx->lang])
#define IDX_DELE 136
#define MSG_DELE (message[136][ctx->lang])
#define IDX_EPRT 137
#define MSG_EPRT (message[137][ctx->lang])
#define IDX_EPSV 138
#define MSG_EPSV (message[138][ctx->lang])
#define IDX_HELP 139
#define MSG_HELP (message[139][ctx->lang])
#define IDX_HOST 140
#define MSG_HOST (message[140][ctx->lang])
#define IDX_FEAT 141
#define MSG_FEAT (message[141][ctx->lang])
#define IDX_LANG 142
#define MSG_LANG (message[142][ctx->lang])
#define IDX_LIST 143
#define MSG_LIST (message[143][ctx->lang])
#define IDX_LPRT 144
#define MSG_LPRT (message[144][ctx->lang])
#define IDX_LPSV 145
#define MSG_LPSV (message[145][ctx->lang])
#define IDX_NLST 146
#define MSG_NLST (message[146][ctx->lang])
#define IDX_MDTM 147
#define MSG_MDTM (message[147][ctx->lang])
#define IDX_MKD 148
#define MSG_MKD (message[148][ctx->lang])
#define IDX_MLSD 149
#define MSG_MLSD (message[149][ctx->lang])
#define IDX_MLST 150
#define MSG_MLST (message[150][ctx->lang])
#define IDX_NOOP 151
#define MSG_NOOP (message[151][ctx->lang])
#define IDX_OPTS 152
#define MSG_OPTS (message[152][ctx->lang])
#define IDX_PASS 153
#define MSG_PASS (message[153][ctx->lang])
#define IDX_PASV 154
#define MSG_PASV (message[154][ctx->lang])
#define IDX_PORT 155
#define MSG_PORT (message[155][ctx->lang])
#define IDX_PWD 156
#define MSG_PWD (message[156][ctx->lang])
#define IDX_QUIT 157
#define MSG_QUIT (message[157][ctx->lang])
#define IDX_REIN 158
#define MSG_REIN (message[158][ctx->lang])
#define IDX_REST 159
#define MSG_REST (message[159][ctx->lang])
#define IDX_RANG 160
#define MSG_RANG (message[160][ctx->lang])
#define IDX_RETR 161
#define MSG_RETR (message[161][ctx->lang])
#define IDX_RMD 162
#define MSG_RMD (message[162][ctx->lang])
#define IDX_RNFR 163
#define MSG_RNFR (message[163][ctx->lang])
#define IDX_RNTO 164
#define MSG_RNTO (message[164][ctx->lang])
#define IDX_SITE 165
#define MSG_SITE (message[165][ctx->lang])
#define IDX_SIZE 166
#define MSG_SIZE (message[166][ctx->lang])
#define IDX_STAT 167
#define MSG_STAT (message[167][ctx->lang])
#define IDX_STOR 168
#define MSG_STOR (message[168][ctx->lang])
#define IDX_STOU 169
#define MSG_STOU (message[169][ctx->lang])
#define IDX_SYST 170
#define MSG_SYST (message[170][ctx->lang])
#define IDX_TYPE 171
#define MSG_TYPE (message[171][ctx->lang])
#define IDX_MODE 172
#define MSG_MODE (message[172][ctx->lang])
#define IDX_USER 173
#define MSG_USER (message[173][ctx->lang])
#define IDX_SITE_CHECKMTH 174
#define MSG_SITE_CHECKMTH (message[174][ctx->lang])
#define IDX_SITE_CHECKSUM 175
#define MSG_SITE_CHECKSUM (message[175][ctx->lang])
#define IDX_SITE_CHMOD 176
#define MSG_SITE_CHMOD (message[176][ctx->lang])
#define IDX_SITE_HELP 177
#define MSG_SITE_HELP (message[177][ctx->lang])
#define IDX_SITE_HTPWD 178
#define MSG_SITE_HTPWD (message[178][ctx->lang])
#define IDX_SITE_ID 179
#define MSG_SITE_ID (message[179][ctx->lang])
#define IDX_SITE_GROUP 180
#define MSG_SITE_GROUP (message[180][ctx->lang])
#define IDX_SITE_GROUPS 181
#define MSG_SITE_GROUPS (message[181][ctx->lang])
#define IDX_SITE_UMASK 182
#define MSG_SITE_UMASK (message[182][ctx->lang])
#define IDX_SITE_IDLE 183
#define MSG_SITE_IDLE (message[183][ctx->lang])
#define IDX_PBSZ 184
#define MSG_PBSZ (message[184][ctx->lang])
#define IDX_PROT 185
#define MSG_PROT (message[185][ctx->lang])
#define IDX_ESTA 186
#define MSG_ESTA (message[186][ctx->lang])
#define IDX_ESTP 187
#define MSG_ESTP (message[187][ctx->lang])
#define IDX_200_Current_inactivity 188
#define MSG_200_Current_inactivity (message[188][ctx->lang])
#define IDX_200_Inactivity_set 189
#define MSG_200_Inactivity_set (message[189][ctx->lang])
#define IDX_501_Inactivity_range 190
#define MSG_501_Inactivity_range (message[190][ctx->lang])
#define IDX_500_Inactivity 191
#define MSG_500_Inactivity (message[191][ctx->lang])
#define IDX_Readme_notify_1 192
#define MSG_Readme_notify_1 (message[192][ctx->lang])
#define IDX_Readme_notify_2 193
#define MSG_Readme_notify_2 (message[193][ctx->lang])
#define IDX_Readme_notify_3n 194
#define MSG_Readme_notify_3n (message[194][ctx->lang])
#define IDX_Readme_notify_31 195
#define MSG_Readme_notify_31 (message[195][ctx->lang])
#define IDX_200_Command_okay_remaining_n 196
#define MSG_200_Command_okay_remaining_n (message[196][ctx->lang])
#define IDX_200_Command_okay_remaining_1 197
#define MSG_200_Command_okay_remaining_1 (message[197][ctx->lang])
#define IDX_214_Direct_comments 198
#define MSG_214_Direct_comments (message[198][ctx->lang])
#define IDX_504_no_ascii 199
#define MSG_504_no_ascii (message[199][ctx->lang])
#define IDX_501_Syntax 200
#define MSG_501_Syntax (message[200][ctx->lang])
#define IDX_125_Starting_ASCII 201
#define MSG_125_Starting_ASCII (message[201][ctx->lang])
#define IDX_125_Starting_Binary 202
#define MSG_125_Starting_Binary (message[202][ctx->lang])
#define IDX_125_Starting_dc_bytes 203
#define MSG_125_Starting_dc_bytes (message[203][ctx->lang])
#define IDX_125_Starting_dc 204
#define MSG_125_Starting_dc (message[204][ctx->lang])
#define IDX_503_PBSZ_INCOMPLETE 205
#define MSG_503_PBSZ_INCOMPLETE (message[205][ctx->lang])
#define IDX_200_PROT_P_APPLIED 206
#define MSG_200_PROT_P_APPLIED (message[206][ctx->lang])
#define IDX_200_PROT_C_APPLIED 207
#define MSG_200_PROT_C_APPLIED (message[207][ctx->lang])
#define IDX_536_PROT_UNDEFINED 208
#define MSG_536_PROT_UNDEFINED (message[208][ctx->lang])
#define IDX_503_Security_data_exchange_incomplete 209
#define MSG_503_Security_data_exchange_incomplete (message[209][ctx->lang])
#define IDX_214_Group_membership 210
#define MSG_214_Group_membership (message[210][ctx->lang])
#define IDX_551_Internal_error 211
#define MSG_551_Internal_error (message[211][ctx->lang])
#define IDX_504_size_no_ascii 212
#define MSG_504_size_no_ascii (message[212][ctx->lang])
#define IDX_504_size_ascii_exceeded 213
#define MSG_504_size_ascii_exceeded (message[213][ctx->lang])
#define IDX_225_Connected_from 214
#define MSG_225_Connected_from (message[214][ctx->lang])
#define IDX_225_Connected_to 215
#define MSG_225_Connected_to (message[215][ctx->lang])
#define IDX_425_Dataconnection_not_open 216
#define MSG_425_Dataconnection_not_open (message[216][ctx->lang])
#define IDX_425_Cant_open_dataconnection 217
#define MSG_425_Cant_open_dataconnection (message[217][ctx->lang])
#define IDX_520_Not_passive 218
#define MSG_520_Not_passive (message[218][ctx->lang])
#define IDX_520_Not_active 219
#define MSG_520_Not_active (message[219][ctx->lang])
#define IDX_MFMT 220
#define MSG_MFMT (message[220][ctx->lang])
#define IDX_MFF 221
#define MSG_MFF (message[221][ctx->lang])
#define IDX_504_Parameter_not_implemented 222
#define MSG_504_Parameter_not_implemented (message[222][ctx->lang])
#define IDX_556_Not_hashable 223
#define MSG_556_Not_hashable (message[223][ctx->lang])
#define IDX_334_AUTH_SSL_OK 224
#define MSG_334_AUTH_SSL_OK (message[224][ctx->lang])
#define IDX_CCC 225
#define MSG_CCC (message[225][ctx->lang])
#define IDX_534_Denied 226
#define MSG_534_Denied (message[226][ctx->lang])
#define IDX_533_Denied 227
#define MSG_533_Denied (message[227][ctx->lang])
#define IDX_HASH 228
#define MSG_HASH (message[228][ctx->lang])
#define IDX_501_unknown_checksum_algorithm 229
#define MSG_501_unknown_checksum_algorithm (message[229][ctx->lang])
